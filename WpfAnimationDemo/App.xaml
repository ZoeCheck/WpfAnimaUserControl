<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             mc:Ignorable="d"
             x:Class="WpfAnimationDemo.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="ProgressBarStyle"
               TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid>
                            <!--背景框-->
                            <Rectangle Margin="0"
                                       VerticalAlignment="Stretch"
                                       Height="Auto"
                                       Stroke="#FF7C8C9A"
                                       RadiusX="5"
                                       RadiusY="5">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#FFDEDEDE"
                                                      Offset="0" />
                                        <GradientStop Color="#99FFFFFF"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <!--进度低槽     不要改这个DockPanel的名字-->
                            <DockPanel x:Name="PART_Track"
                                       Margin="1"
                                       LastChildFill="false">
                                <!--进度填充条     不要改这个Rec的名字-->
                                <Rectangle  x:Name="PART_Indicator" RadiusX="5" RadiusY="5" Margin="0,1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FFF3FFA7"
                                                          Offset="0.075" />
                                            <GradientStop Color="#FFADDA4F"
                                                          Offset="0.8" />
                                            <GradientStop Color="#FFCFEC31"
                                                          Offset="0.129" />
                                            <GradientStop Color="#FF8AC118"
                                                          Offset="0.871" />
                                            <GradientStop Color="#FFA8DC3B"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </DockPanel>
                            <!--边缘的一像素高光-->
                            <Rectangle Margin="1"
                                       Height="Auto"
                                       Stroke="White"
                                       Opacity="0.25" RadiusX="5" RadiusY="5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--垂直方向的进度条-->
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ProgressBar}">
                                <Grid>
                                    <!--背景框-->
                                    <Rectangle Margin="0"
                                               VerticalAlignment="Stretch"
                                               Height="Auto"
                                               Stroke="#FF7C8C9A"
                                               RadiusX="1"
                                               RadiusY="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="1,0.5"
                                                                 StartPoint="0,0.5">
                                                <GradientStop Color="#FFDEDEDE"
                                                              Offset="0" />
                                                <GradientStop Color="White"
                                                              Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <DockPanel x:Name="PART_Track"
                                               Margin="1,0,1,1"
                                               LastChildFill="false">
                                        <Decorator x:Name="PART_Indicator"
                                                   DockPanel.Dock="Bottom">
                                            <Rectangle>
                                                <Rectangle.LayoutTransform>
                                                    <RotateTransform Angle="-90" />
                                                </Rectangle.LayoutTransform>
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.5,1"
                                                                         StartPoint="0.5,0">
                                                        <GradientStop Color="#FFF3FFA7"
                                                                      Offset="0.075" />
                                                        <GradientStop Color="#FFADDA4F"
                                                                      Offset="0.8" />
                                                        <GradientStop Color="#FFCFEC31"
                                                                      Offset="0.106" />
                                                        <GradientStop Color="#FF8AC118"
                                                                      Offset="0.871" />
                                                        <GradientStop Color="#FFA8DC3B"
                                                                      Offset="1" />
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Decorator>
                                    </DockPanel>
                                    <!--边缘的一像素高光-->
                                    <Rectangle Margin="1"
                                               Height="Auto"
                                               Stroke="White"
                                               Opacity="0.25" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#F3F3F3"
                          Offset="0" />
            <GradientStop Color="#EBEBEB"
                          Offset="0.5" />
            <GradientStop Color="#DDDDDD"
                          Offset="0.5" />
            <GradientStop Color="#CDCDCD"
                          Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder"
                         Color="#FF707070" />
        <Style x:Key="ButtonStyleEmp"
               TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardMove"
                                        RepeatBehavior="Forever"
                                        AutoReverse="True">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FF0800FF" />
                                    <EasingColorKeyFrame KeyTime="0:0:0.7"
                                                         Value="#000800FF" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Width="12"
                              Height="12">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Ellipse x:Name="ellipse"
                                     Margin="0"
                                     Stroke="#FF0800FF"
                                     StrokeThickness="1.5"
                                     Width="12"
                                     Height="12">
                                <Ellipse.Fill>
                                    <RadialGradientBrush Center="0.599,0.28"
                                                         GradientOrigin="0.599,0.28">
                                        <GradientStop Color="#FFC8D2B3" />
                                        <GradientStop Color="#FF0004FF"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Grid.Row="1"
                                              Width="Auto"
                                              Height="Auto" />
                            <Grid Height="10.75"
                                  Margin="-13.25,-10.75,-13.25,0"
                                  VerticalAlignment="Top">
                                <TextBlock Margin="0"
                                           TextWrapping="Wrap"
                                           Text="{TemplateBinding ToolTip}"
                                           VerticalAlignment="Center"
                                           Height="10.75"
                                           FontSize="8"
                                           Foreground="#FF0800FF"
                                           HorizontalAlignment="Center" />
                            </Grid>
                            <Canvas Margin="2.387,2.025,2.199,2.463"
                                    Grid.RowSpan="1">
                                <Ellipse Margin="0"
                                         Stroke="#FF009CFF"
                                         StrokeThickness="0"
                                         Height="3.258"
                                         VerticalAlignment="Center"
                                         Fill="#FFC0E43E"
                                         Width="5"
                                         HorizontalAlignment="Center"
                                         Canvas.Left="1.207" />
                                <Path Data="M0.26932203,-0.0093433256 C2.4434073,1.649482 4.512847,1.628256 6.488322,-0.0093433256 7.3330931,1.1803371 7.4823262,2.5285867 7.4723893,4.259742 L5.5074919,3.0988088 5.1389452,5.177667 1.5760924,5.1955772 1.1551298,3.1698809 -0.83507225,4.4729328 C-0.93333736,2.6794348 -0.65349213,1.2712046 0.26932203,-0.0093433256 z"
                                      Margin="0"
                                      Stretch="Fill"
                                      Stroke="#FF009CFF"
                                      StrokeThickness="0"
                                      Fill="#FFC0E43E"
                                      Height="4.577"
                                      Width="7.413"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch"
                                      Canvas.Top="2.935"
                                      Canvas.Left="0.001" />
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="StoryboardMove_BeginStoryboard1"
                                                     Storyboard="{StaticResource StoryboardMove}" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="StoryboardMove_BeginStoryboard1" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true" />
                            <Trigger Property="ToggleButton.IsChecked"
                                     Value="true" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <SolidColorBrush x:Key="BrushAltern"
                         Color="#FFC6EBE9" />
        <SolidColorBrush x:Key="BrushHorLine"
                         Color="#FFBEF3F2" />
        <SolidColorBrush x:Key="BrushRowBak"
                         Color="#FFE3F9FB" />
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
               TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border"
                                       Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                       SnapsToDevicePixels="True" />
                            <Polygon x:Name="Arrow"
                                     Fill="Black"
                                     HorizontalAlignment="Right"
                                     Margin="8,8,3,3"
                                     Opacity="0.15"
                                     Points="0,10 10,10 10,0"
                                     Stretch="Uniform"
                                     VerticalAlignment="Bottom" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Stroke"
                                        TargetName="Border"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Fill"
                                        TargetName="Border"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Visibility"
                                        TargetName="Arrow"
                                        Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- NormalBrush 用作 SimpleButton 和 SimpleRepeatButton 的背景 -->
        <LinearGradientBrush x:Key="NormalBrush"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#EEE"
                          Offset="0.0" />
            <GradientStop Color="#CCC"
                          Offset="1.0" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NormalBorderBrush"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#CCC"
                          Offset="0.0" />
            <GradientStop Color="#444"
                          Offset="1.0" />
        </LinearGradientBrush>

        <!-- DefaultedBorderBrush 用于显示 KeyBoardFocus -->
        <LinearGradientBrush x:Key="DefaultedBorderBrush"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#777"
                          Offset="0.0" />
            <GradientStop Color="#000"
                          Offset="1.0" />
        </LinearGradientBrush>

        <!-- MouseOverBrush 用于 Button、Radio Button、CheckBox 中的 MouseOver -->
        <LinearGradientBrush x:Key="MouseOverBrush"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#FFF"
                          Offset="0.0" />
            <GradientStop Color="#AAA"
                          Offset="1.0" />
        </LinearGradientBrush>

        <!-- PressedBrush 用于 Button、Radio Button、CheckBox 中的 Pressed -->
        <LinearGradientBrush x:Key="PressedBrush"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#BBB"
                          Offset="0.0" />
            <GradientStop Color="#EEE"
                          Offset="0.1" />
            <GradientStop Color="#EEE"
                          Offset="0.9" />
            <GradientStop Color="#FFF"
                          Offset="1.0" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBorderBrush"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#444"
                          Offset="0.0" />
            <GradientStop Color="#888"
                          Offset="1.0" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBackgroundBrush"
                         Color="#EEE" />
        <SolidColorBrush x:Key="DisabledBorderBrush"
                         Color="#AAA" />

        <!-- “已禁用的画笔”用于每个控件的 Disabled 外观 -->
        <SolidColorBrush x:Key="DisabledForegroundBrush"
                         Color="#888" />
        <!-- Simple Repeat Button - Simple ScrollBar 可将其用作向上和向下按钮 -->
        <Style x:Key="SimpleRepeatButton"
               d:IsControlPart="True"
               TargetType="{x:Type RepeatButton}"
               BasedOn="{x:Null}">
            <Setter Property="Background"
                    Value="{DynamicResource NormalBrush}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource NormalBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter HorizontalAlignment="Center"
                                              x:Name="ContentPresenter"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource DefaultedBorderBrush}"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        Value="{DynamicResource MouseOverBrush}"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        Value="{DynamicResource PressedBrush}"
                                        TargetName="Border" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource PressedBorderBrush}"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        Value="{DynamicResource DisabledBackgroundBrush}"
                                        TargetName="Border" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource DisabledBorderBrush}"
                                        TargetName="Border" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ScrollRepeatButton Style - 此 RepeatButton 在 Scrollbar 中的 Thumb 的上方和下方使用。将其设置为透明可使其不覆盖滚动栏 -->
        <Style x:Key="SimpleScrollRepeatButtonStyle"
               d:IsControlPart="True"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple Thumb - Thumb 是 Scrollbar 的可拖动部分 -->
        <Style x:Key="SimpleThumbStyle"
               d:IsControlPart="True"
               TargetType="{x:Type Thumb}"
               BasedOn="{x:Null}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Margin="0,0,0,0"
                              x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                       x:Name="Rectangle"
                                       VerticalAlignment="Stretch"
                                       Width="Auto"
                                       Height="Auto"
                                       RadiusX="2"
                                       RadiusY="2"
                                       Fill="{DynamicResource NormalBrush}"
                                       Stroke="#FF5D5D5D" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused"
                                     Value="True" />
                            <Trigger Property="IsMouseOver"
                                     Value="True" />
                            <Trigger Property="IsEnabled"
                                     Value="False" />
                            <Trigger Property="IsDragging"
                                     Value="True" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ScrollBar  它使用了 SimpleThumb、SimpleRepeatButton 和 SimpleScrollRepeatButton -->

        <Style x:Key="SimpleScrollBar"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="false" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                              Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="#33FFFFFF">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>

                            <RepeatButton x:Name="DecreaseRepeat"
                                          Style="{DynamicResource SimpleRepeatButton}"
                                          Command="ScrollBar.LineUpCommand">
                                <Grid>
                                    <Path x:Name="DecreaseArrow"
                                          Stroke="{TemplateBinding Foreground}"
                                          StrokeThickness="1"
                                          Data="M 0 4 L 8 4 L 4 0 Z" />
                                </Grid>
                            </RepeatButton>

                            <!-- Track 是一种特殊的布局容器，可调整用于在其一侧执行跳转滚动的 thumb 和 repeat button 的大小 -->
                            <Track Grid.Row="1"
                                   x:Name="PART_Track"
                                   Orientation="Vertical"
                                   IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource SimpleThumbStyle}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                                  Style="{DynamicResource SimpleScrollRepeatButtonStyle}"
                                                  Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                                  Style="{DynamicResource SimpleScrollRepeatButtonStyle}"
                                                  Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                            </Track>

                            <RepeatButton Grid.Row="2"
                                          x:Name="IncreaseRepeat"
                                          Style="{DynamicResource SimpleRepeatButton}"
                                          Command="ScrollBar.LineDownCommand">
                                <Grid>
                                    <Path x:Name="IncreaseArrow"
                                          Stroke="{TemplateBinding Foreground}"
                                          StrokeThickness="1"
                                          Data="M 0 0 L 4 4 L 8 0 Z" />
                                </Grid>
                            </RepeatButton>
                        </Grid>

                        <!-- 它对 ScrollBar 使用一个模板，并将其旋转为“水平”
					它还会更改命令，使其执行“向左”和“向右”命令，而不是执行“向上”和“向下”命令 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation"
                                     Value="Horizontal">

                                <!-- 将 ScrollBar 从“垂直”旋转为“水平” -->
                                <Setter Property="LayoutTransform"
                                        TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>

                                <!-- Track 在内部绑定到“方向”，因此我们需要将其旋转回“垂直” -->
                                <Setter TargetName="PART_Track"
                                        Property="Orientation"
                                        Value="Vertical" />

                                <!-- 更改命令，以执行“水平”命令 -->
                                <Setter Property="Command"
                                        Value="ScrollBar.LineLeftCommand"
                                        TargetName="DecreaseRepeat" />
                                <Setter Property="Command"
                                        Value="ScrollBar.LineRightCommand"
                                        TargetName="IncreaseRepeat" />
                                <Setter Property="Command"
                                        Value="ScrollBar.PageLeftCommand"
                                        TargetName="PageDown" />
                                <Setter Property="Command"
                                        Value="ScrollBar.PageRightCommand"
                                        TargetName="PageUp" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridStyleMain"
               TargetType="{x:Type DataGrid}">
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderBrush"
                    Value="#FF688CAF" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="RowDetailsVisibilityMode"
                    Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer"
                                          Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                    Focusable="false"
                                                    Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    Grid.ColumnSpan="2"
                                                                    Grid.Row="1" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Column="2"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       Orientation="Vertical"
                                                       Grid.Row="1"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Style="{DynamicResource SimpleScrollBar}" />
                                            <Grid Grid.Column="1"
                                                  Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                           Grid.Column="1"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Orientation="Horizontal"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           ViewportSize="{TemplateBinding ViewportWidth}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping"
                         Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll"
                            Value="false" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="BrushVerLine"
                         Color="#FF7CCED4" />
        <LinearGradientBrush x:Key="BrushAdd"
                             EndPoint="0.5,1"
                             StartPoint="0.5,0">
            <GradientStop Color="#FF77B3E9"
                          Offset="0" />
            <GradientStop Color="#FF167AE4"
                          Offset="1" />
            <GradientStop Color="#FF1B7DD6"
                          Offset="0.864" />
        </LinearGradientBrush>
        <!-- SimpleButtonFocusVisual 用于显示围绕 SimpleButton 控件的键盘焦点 -->
        <Style x:Key="SimpleButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate />
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple Button - 此控件用于根据每种状态设置画笔。请注意，这些画笔必须已在上面列出，因为它们是静态资源 -->
        <Style x:Key="SimpleButton"
               TargetType="{x:Type Button}"
               BasedOn="{x:Null}">
            <Setter Property="FocusVisualStyle"
                    Value="{DynamicResource SimpleButtonFocusVisual}" />
            <Setter Property="Background"
                    Value="{DynamicResource NormalBrush}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource NormalBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- 我们将 Grid 用作根，原因在于这便于添加更多的元素来自定义按钮 -->
                        <Grid x:Name="Grid">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}" />

                            <!-- Content Presenter 是控件放置文本内容等项之处 -->
                            <!-- 通过利用绑定，无需编辑模板即可将控件参数化 -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                        </Grid>

                        <!--每种状态都基于模板中的 Border 来设置画笔 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource DefaultedBorderBrush}"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        Value="{DynamicResource MouseOverBrush}"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        Value="{DynamicResource PressedBrush}"
                                        TargetName="Border" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource PressedBorderBrush}"
                                        TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="true" />
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        Value="{DynamicResource DisabledBackgroundBrush}"
                                        TargetName="Border" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource DisabledBorderBrush}"
                                        TargetName="Border" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 用于 ScrollViewer、TreeView、ListBox、Expander、TextBox、Tab 控件的背景 -->
        <SolidColorBrush x:Key="WindowBackgroundBrush"
                         Color="#FFF" />

        <!-- 用于 Checkmark、Radio button、TreeViewItem、Expander ToggleButton 字形 -->
        <SolidColorBrush x:Key="GlyphBrush"
                         Color="#444" />


        <!-- Simple ComboBox Toggle Button - 它在 ComboBox 中使用，用于展开和折叠 ComboBox Popup-->
        <ControlTemplate x:Key="ComboBoxToggleButton"
                         TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Rectangle Grid.ColumnSpan="2"
                           HorizontalAlignment="Stretch"
                           x:Name="Rectangle"
                           VerticalAlignment="Stretch"
                           Width="Auto"
                           Height="Auto"
                           RadiusX="5"
                           RadiusY="5"
                           Fill="{DynamicResource NormalBrush}"
                           Stroke="{DynamicResource NormalBorderBrush}" />
                <Rectangle Grid.Column="0"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Width="Auto"
                           Height="Auto"
                           RadiusX="5"
                           RadiusY="5"
                           Fill="{DynamicResource WindowBackgroundBrush}"
                           Stroke="{DynamicResource NormalBorderBrush}" />
                <Path Grid.Column="1"
                      HorizontalAlignment="Center"
                      x:Name="Arrow"
                      VerticalAlignment="Center"
                      Fill="{DynamicResource GlyphBrush}"
                      Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="true">
                    <Setter Property="Fill"
                            Value="{DynamicResource MouseOverBrush}"
                            TargetName="Rectangle" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter Property="Fill"
                            Value="{DynamicResource PressedBrush}"
                            TargetName="Rectangle" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Fill"
                            Value="{DynamicResource DisabledBackgroundBrush}"
                            TargetName="Rectangle" />
                    <Setter Property="Stroke"
                            Value="{DynamicResource DisabledBorderBrush}"
                            TargetName="Rectangle" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource DisabledForegroundBrush}" />
                    <Setter Property="Fill"
                            Value="{DynamicResource DisabledForegroundBrush}"
                            TargetName="Arrow" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- 这是包含 ComboBox 中的选定项的区域 -->

        <ControlTemplate x:Key="ComboBoxTextBox"
                         TargetType="{x:Type TextBox}">
            <!-- 必须将其命名为 PART_ContentHost -->
            <Border x:Name="PART_ContentHost"
                    Focusable="False"
                    Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <SolidColorBrush x:Key="SolidBorderBrush"
                         Color="#888" />
        <!-- Simple ScrollViewer 
	ScrollViewer 是 Grid 控件，该控件包含 ContentPresenter 以及 Horizontal 和 Vertical ScrollBar 
	它可供 ListBox、MenuItem、ComboBox 和 TreeView 使用 -->
        <Style x:Key="SimpleScrollViewer"
               TargetType="{x:Type ScrollViewer}"
               BasedOn="{x:Null}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0"
                                                    Grid.Row="0"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />

                            <!-- ScrollBars 的可见性通过控件的实现来控制 -->
                            <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Grid.Column="0"
                                       Grid.Row="1"
                                       x:Name="PART_HorizontalScrollBar"
                                       Style="{DynamicResource SimpleScrollBar}"
                                       Orientation="Horizontal"
                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableWidth}" />
                            <ScrollBar
                                       Grid.Column="1"
                                       Grid.Row="0"
                                       x:Name="PART_VerticalScrollBar"
                                       Style="{DynamicResource SimpleScrollBar}"
                                       Orientation="Vertical"
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple ComboBox 
	它使用 ComboBoxToggleButton 来展开和折叠 Popup 控件
	使用 SimpleScrollViewer 可使项滚动，而使用 SimpleComboBoxItem 可定义每个项的外观
	Popup 显示了 StackPanel 中的项的列表-->

        <Style x:Key="SimpleComboBox"
               TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                            <ToggleButton Grid.Column="2"
                                          Template="{DynamicResource ComboBoxToggleButton}"
                                          x:Name="ToggleButton"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press" />
                            <ContentPresenter HorizontalAlignment="Left"
                                              Margin="3,3,23,3"
                                              x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />

                            <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                            <TextBox Visibility="Hidden"
                                     Template="{DynamicResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     Margin="3,3,23,3"
                                     x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     VerticalAlignment="Center"
                                     Focusable="True"
                                     Background="Transparent"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />

                            <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   x:Name="Popup"
                                   Focusable="False"
                                   AllowsTransparency="True"
                                   PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      x:Name="DropDown"
                                      SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource WindowBackgroundBrush}"
                                            BorderBrush="{DynamicResource SolidBorderBrush}"
                                            BorderThickness="1" />
                                    <ScrollViewer Margin="4,6,4,6"
                                                  Style="{DynamicResource SimpleScrollViewer}"
                                                  SnapsToDevicePixels="True"
                                                  HorizontalScrollBarVisibility="Auto"
                                                  VerticalScrollBarVisibility="Auto"
                                                  CanContentScroll="True">

                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />

                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- 这会强制 DropDown 的大小有最小限制(如果它为空) -->
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter Property="MinHeight"
                                        Value="95"
                                        TargetName="DropDownBorder" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource DisabledForegroundBrush}" />
                                <Setter Property="Foreground"
                                        TargetName="PART_EditableTextBox"
                                        Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                            <Trigger Property="AllowsTransparency"
                                     SourceName="Popup"
                                     Value="true">
                                <Setter Property="CornerRadius"
                                        Value="4"
                                        TargetName="DropDownBorder" />
                                <Setter Property="Margin"
                                        Value="0,2,0,0"
                                        TargetName="DropDownBorder" />
                            </Trigger>
                            <Trigger Property="IsEditable"
                                     Value="true">
                                <Setter Property="IsTabStop"
                                        Value="false" />
                                <Setter Property="Visibility"
                                        Value="Visible"
                                        TargetName="PART_EditableTextBox" />
                                <Setter Property="Visibility"
                                        Value="Hidden"
                                        TargetName="ContentSite" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Simple TextBox -->
        <Style x:Key="SimpleTextBox"
               TargetType="{x:Type TextBox}">
            <Setter Property="KeyboardNavigation.TabNavigation"
                    Value="None" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="AllowDrop"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{DynamicResource WindowBackgroundBrush}"
                                    BorderBrush="{DynamicResource SolidBorderBrush}"
                                    BorderThickness="1"
                                    Padding="2"
                                    CornerRadius="2">

                                <!-- 实现时会将 Content 置于 ScrollViewer 中。必须将其命名为 PART_ContentHost，控件才能起作用 -->
                                <ScrollViewer Margin="0"
                                              x:Name="PART_ContentHost"
                                              Style="{DynamicResource SimpleScrollViewer}"
                                              Background="{TemplateBinding Background}" />

                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Background"
                                        Value="{DynamicResource DisabledBackgroundBrush}"
                                        TargetName="Border" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource DisabledBackgroundBrush}"
                                        TargetName="Border" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="CheckBoxStroke"
                         Color="#8E8F8F" />
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyleLeader"
               TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background"
                    Value="#F4F4F4" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Width="84"
                              Height="25">
                            <Border x:Name="border"
                                    CornerRadius="5"
                                    Background="{x:Null}">
                                <BulletDecorator x:Name="bulletDecorator"
                                                 Background="Transparent">
                                    <ContentPresenter RecognizesAccessKey="True"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </BulletDecorator>
                            </Border>
                            <Path x:Name="path"
                                  Data="M58.862542,0.11029407 L35.037131,35.253109 0.45914253,59.240694 z"
                                  Fill="White"
                                  Height="Auto"
                                  Margin="12.272,-4.444,12.336,-29.927"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  Stroke="Black"
                                  Width="Auto"
                                  StrokeThickness="0"
                                  Opacity="0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="45" />
                                        <TranslateTransform X="0.042724044351579948"
                                                            Y="-0.23414496731297874" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FFF4F7FF"
                                                          Offset="0.017" />
                                            <GradientStop Color="#FF4F659B"
                                                          Offset="0.647" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter Property="Background"
                                        TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FF3E64FF"
                                                          Offset="0" />
                                            <GradientStop Color="#FF31C2FF"
                                                          Offset="1" />
                                            <GradientStop Color="#FF28138D"
                                                          Offset="0.931" />
                                            <GradientStop Color="#FF007EA9"
                                                          Offset="0.487" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity"
                                        TargetName="path"
                                        Value="1" />
                                <Setter Property="Margin"
                                        TargetName="path"
                                        Value="15.887,-0.859,15.936,-26.342" />
                            </Trigger>
                            <Trigger Property="HasContent"
                                     Value="true">
                                <Setter Property="FocusVisualStyle"
                                        Value="{StaticResource CheckRadioFocusVisual}" />
                                <Setter Property="Padding"
                                        Value="4,0,0,0" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleStation"
               TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{x:Null}">
                            <Ellipse Margin="0"
                                     Stroke="Black"
                                     Width="Auto"
                                     Height="Auto"
                                     StrokeThickness="0"
                                     Fill="#FF29A308" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true" />
                            <Trigger Property="ToggleButton.IsChecked"
                                     Value="true" />
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="CheckBoxFillNormal"
                         Color="#F4F4F4" />
        <Style x:Key="EmptyCheckBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="1"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyleAnimation"
               TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background"
                    Value="{StaticResource CheckBoxFillNormal}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource EmptyCheckBoxFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="grid"
                              RenderTransformOrigin="0.5,0.5" Background="{x:Null}">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Ellipse x:Name="ellipse"
                                     Fill="#02F4F4F5"
                                     Margin="0"
                                     Stroke="#FFC0E43E"
                                     StrokeThickness="2" />
                            <Path x:Name="path2"
                                  Data="M-1.2684631,2.2684632 L9.5,0.5 7.7315369,11.268463 z"
                                  Fill="#FFC0E43E"
                                  Height="Auto"
                                  Margin="8.76,8.76,9.48,9.48"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  Stroke="#FF6D8119"
                                  Width="Auto">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="45" />
                                        <TranslateTransform X="-0.88000000000000078"
                                                            Y="0.36450793488832645" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Path x:Name="path"
                                  Data="M8,8 L8,22"
                                  Fill="#FFAAD203"
                                  HorizontalAlignment="Left"
                                  Margin="11.11,7.335,0,7.665"
                                  Stretch="Fill"
                                  Stroke="Red"
                                  Width="2"
                                  StrokeThickness="2"
                                  Visibility="Hidden" />
                            <Path x:Name="path1"
                                  Data="M8,8 L8,22"
                                  Fill="#FFAAD203"
                                  HorizontalAlignment="Right"
                                  Margin="0,7.335,10.89,7.665"
                                  Stretch="Fill"
                                  Stroke="Red"
                                  Width="2"
                                  StrokeThickness="2"
                                  Visibility="Hidden" />
                        </Grid>
                        <ControlTemplate.Triggers>
                    		<Trigger Property="IsMouseOver" Value="True">
                    			<Setter Property="Stroke" TargetName="ellipse" Value="Red"/>
                    		</Trigger>
                    		<Trigger Property="IsPressed"
                    			Value="True">
                    			<Setter Property="RenderTransform"
                    				TargetName="grid">
                    				<Setter.Value>
                    					<TransformGroup>
                    						<ScaleTransform />
                    						<SkewTransform />
                    						<RotateTransform />
                    						<TranslateTransform X="1"
                    							Y="1" />
                    					</TransformGroup>
                    				</Setter.Value>
                    			</Setter>
                    		</Trigger>
                    		<Trigger Property="IsChecked"
                    			Value="True">
                    			<Setter Property="Visibility"
                    				TargetName="path2"
                    				Value="Hidden" />
                    			<Setter Property="Visibility"
                    				TargetName="path"
                    				Value="Visible" />
                    			<Setter Property="Visibility"
                    				TargetName="path1"
                    				Value="Visible" />
                    			<Setter Property="Stroke"
                    				TargetName="ellipse"
                    				Value="Red" />
                    		</Trigger>
                    		<Trigger Property="IsChecked"
                    			Value="False">
                    			<Setter Property="Visibility"
                    				TargetName="path"
                    				Value="Hidden" />
                    			<Setter Property="Visibility"
                    				TargetName="path1"
                    				Value="Hidden" />
                    			<Setter Property="Visibility"
                    				TargetName="path2"
                    				Value="Visible" />
                    		</Trigger>
                    		<Trigger Property="HasContent"
                    			Value="true">
                    			<Setter Property="FocusVisualStyle"
                    				Value="{StaticResource CheckRadioFocusVisual}" />
                    			<Setter Property="Padding"
                    				Value="4,0,0,0" />
                    		</Trigger>
                    		<Trigger Property="IsEnabled"
                    			Value="false">
                    			<Setter Property="Foreground"
                    				Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    		</Trigger>
                    	</ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleEmpRed"
               TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardMove"
                                        RepeatBehavior="Forever"
                                        AutoReverse="True">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FF0800FF" />
                                    <EasingColorKeyFrame KeyTime="0:0:0.7"
                                                         Value="#000800FF" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Width="12"
                              Height="12">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Ellipse x:Name="ellipse"
                                     Margin="0"
                                     Stroke="#FF0800FF"
                                     StrokeThickness="1.5"
                                     Width="12"
                                     Height="12">
                                <Ellipse.Fill>
                                    <RadialGradientBrush Center="0.599,0.28"
                                                         GradientOrigin="0.599,0.28">
                                        <GradientStop Color="#FFC8D2B3" />
                                        <GradientStop Color="#FF0004FF"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Grid.Row="1"
                                              Width="Auto"
                                              Height="Auto" />
                            <Grid Height="10.75"
                                  Margin="-13.25,-10.75,-13.25,0"
                                  VerticalAlignment="Top">
                                <TextBlock Margin="0"
                                           TextWrapping="Wrap"
                                           Text="{TemplateBinding ToolTip}"
                                           VerticalAlignment="Center"
                                           Height="10.75"
                                           FontSize="8"
                                           Foreground="#FF0800FF"
                                           HorizontalAlignment="Center" />
                            </Grid>
                            <Canvas Margin="2.387,2.025,2.199,2.463"
                                    Grid.RowSpan="1">
                                <Ellipse Margin="0"
                                         Stroke="#FF009CFF"
                                         StrokeThickness="0"
                                         Height="3.258"
                                         VerticalAlignment="Center"
                                         Fill="Red"
                                         Width="5"
                                         HorizontalAlignment="Center"
                                         Canvas.Left="1.207" />
                                <Path Data="M0.26932203,-0.0093433256 C2.4434073,1.649482 4.512847,1.628256 6.488322,-0.0093433256 7.3330931,1.1803371 7.4823262,2.5285867 7.4723893,4.259742 L5.5074919,3.0988088 5.1389452,5.177667 1.5760924,5.1955772 1.1551298,3.1698809 -0.83507225,4.4729328 C-0.93333736,2.6794348 -0.65349213,1.2712046 0.26932203,-0.0093433256 z"
                                      Margin="0"
                                      Stretch="Fill"
                                      Stroke="#FF009CFF"
                                      StrokeThickness="0"
                                      Fill="Red"
                                      Height="4.577"
                                      Width="7.413"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch"
                                      Canvas.Top="2.935"
                                      Canvas.Left="0.001" />
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="StoryboardMove_BeginStoryboard"
                                                     Storyboard="{StaticResource StoryboardMove}" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true" />
                            <Trigger Property="ToggleButton.IsChecked"
                                     Value="true" />
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="StoryboardMove_BeginStoryboard" />
                                </Trigger.EnterActions>
                                <Setter Property="Foreground"
                                        Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <RadialGradientBrush x:Key="BrushFollow">
            <GradientStop Color="#FF8DDD3A"
                          Offset="0.46" />
            <GradientStop Color="#FFF9FAF7"
                          Offset="1" />
        </RadialGradientBrush>
        <Style x:Key="CheckBoxStyleFollow"
               TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background"
                    Value="{StaticResource CheckBoxFillNormal}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource EmptyCheckBoxFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardChecked"
                                        RepeatBehavior="Forever"
                                        AutoReverse="False">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                              Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FF8DDD3A" />
                                    <EasingColorKeyFrame KeyTime="0:0:1"
                                                         Value="#FFDD3A3A" />
                                    <EasingColorKeyFrame KeyTime="0:0:2"
                                                         Value="#FF8DDD3A" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                              Storyboard.TargetName="ellipse1">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FF8DDD3A" />
                                    <EasingColorKeyFrame KeyTime="0:0:2"
                                                         Value="#FFDD3A3A" />
                                    <EasingColorKeyFrame KeyTime="0:0:3"
                                                         Value="#FF8DDD3A" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                              Storyboard.TargetName="ellipse2">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FF8DDD3A" />
                                    <EasingColorKeyFrame KeyTime="0:0:3"
                                                         Value="#FFDD3A3A" />
                                    <EasingColorKeyFrame KeyTime="0:0:4"
                                                         Value="#FF8DDD3A" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid"
                              RenderTransformOrigin="0.5,0.5"
                              Background="#02FFFFFF">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Rectangle x:Name="rectangle" Fill="{DynamicResource BrushFollow}"
                                       Height="0.958"
                                       Margin="1.675,4.708,0.316,0"
                                       Stroke="Black"
                                       StrokeThickness="0"
                                       VerticalAlignment="Top"
                                       RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-26.662" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Rectangle x:Name="rectangle1" Fill="{DynamicResource BrushFollow}"
                                       Height="0.958"
                                       Margin="1.78,0,0.864,4.356"
                                       Stroke="Black"
                                       StrokeThickness="0"
                                       VerticalAlignment="Bottom"
                                       RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="22.81" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Ellipse x:Name="ellipse"
                                     HorizontalAlignment="Right"
                                     Height="6"
                                     Margin="0"
                                     Stroke="#FF6D8141"
                                     VerticalAlignment="Top"
                                     Width="6"
                                     StrokeThickness="0.5">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF8DDD3A"
                                                      Offset="0.46" />
                                        <GradientStop Color="White"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse x:Name="ellipse1"
                                     HorizontalAlignment="Left"
                                     Height="Auto"
                                     Margin="0,5,0,4"
                                     Stroke="#FF6D8141"
                                     VerticalAlignment="Stretch"
                                     Width="6"
                                     StrokeThickness="0.5">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF8DDD3A"
                                                      Offset="0.46" />
                                        <GradientStop Color="White"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse x:Name="ellipse2"
                                     HorizontalAlignment="Right"
                                     Height="6"
                                     Margin="0"
                                     Stroke="#FF6D8141"
                                     VerticalAlignment="Bottom"
                                     Width="6"
                                     StrokeThickness="0.5">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF8DDD3A"
                                                      Offset="0.46" />
                                        <GradientStop Color="White"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>
                    		<Trigger Property="IsMouseOver" Value="True">
                    			<Setter Property="Stroke" TargetName="ellipse" Value="Red"/>
                    			<Setter Property="Stroke" TargetName="ellipse1" Value="Red"/>
                    			<Setter Property="Stroke" TargetName="ellipse2" Value="Red"/>
                    			<Setter Property="Fill" TargetName="rectangle">
                    				<Setter.Value>
                    					<RadialGradientBrush>
                    						<GradientStop Color="Red"
                    							Offset="0.46" />
                    						<GradientStop Color="#FFF9FAF7"
                    							Offset="1" />
                    					</RadialGradientBrush>
                    				</Setter.Value>
                    			</Setter>
                    			<Setter Property="Fill" TargetName="rectangle1">
                    				<Setter.Value>
                    					<RadialGradientBrush>
                    						<GradientStop Color="Red"
                    							Offset="0.46" />
                    						<GradientStop Color="#FFF9FAF7"
                    							Offset="1" />
                    					</RadialGradientBrush>
                    				</Setter.Value>
                    			</Setter>
                    		</Trigger>
                    		<Trigger Property="IsPressed"
                    			Value="True">
                    			<Setter Property="RenderTransform"
                    				TargetName="grid">
                    				<Setter.Value>
                    					<TransformGroup>
                    						<ScaleTransform />
                    						<SkewTransform />
                    						<RotateTransform />
                    						<TranslateTransform X="1"
                    							Y="1" />
                    					</TransformGroup>
                    				</Setter.Value>
                    			</Setter>
                    		</Trigger>
                    		<Trigger Property="IsChecked"
                    			Value="False">
                    			<Trigger.EnterActions>
                    				<StopStoryboard BeginStoryboardName="StoryboardChecked_BeginStoryboard" />
                    			</Trigger.EnterActions>
                    		</Trigger>
                    		<Trigger Property="IsChecked"
                    			Value="True">
                    			<Trigger.EnterActions>
                    				<BeginStoryboard x:Name="StoryboardChecked_BeginStoryboard"
                    					Storyboard="{StaticResource StoryboardChecked}" />
                    			</Trigger.EnterActions>
                    		</Trigger>
                    		<Trigger Property="HasContent"
                    			Value="true">
                    			<Setter Property="FocusVisualStyle"
                    				Value="{StaticResource CheckRadioFocusVisual}" />
                    			<Setter Property="Padding"
                    				Value="4,0,0,0" />
                    		</Trigger>
                    		<Trigger Property="IsEnabled"
                    			Value="false">
                    			<Setter Property="Foreground"
                    				Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    		</Trigger>
                    	</ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleFollowing"
               TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardMove"
                                        RepeatBehavior="Forever"
                                        AutoReverse="True">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FF0800FF" />
                                    <EasingColorKeyFrame KeyTime="0:0:0.7"
                                                         Value="#000800FF" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Width="12"
                              Height="12">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Ellipse x:Name="ellipse"
                                     Margin="0"
                                     Stroke="#FF0800FF"
                                     StrokeThickness="1.5"
                                     Width="12"
                                     Height="12">
                                <Ellipse.Fill>
                                    <RadialGradientBrush Center="0.599,0.28"
                                                         GradientOrigin="0.599,0.28">
                                        <GradientStop Color="#FFC8D2B3" />
                                        <GradientStop Color="#FF0004FF"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Grid.Row="1"
                                              Width="Auto"
                                              Height="Auto" />
                            <Grid Height="10.75"
                                  Margin="-13.25,-10.75,-13.25,0"
                                  VerticalAlignment="Top">
                                <TextBlock Margin="0"
                                           TextWrapping="Wrap"
                                           Text="{TemplateBinding ToolTip}"
                                           VerticalAlignment="Center"
                                           Height="10.75"
                                           FontSize="8"
                                           Foreground="#FF0800FF"
                                           HorizontalAlignment="Center" />
                            </Grid>
                            <Canvas Margin="2.387,2.025,2.199,2.463"
                                    Grid.RowSpan="1">
                                <Ellipse Margin="0"
                                         Stroke="#FF009CFF"
                                         StrokeThickness="0"
                                         Height="3.258"
                                         VerticalAlignment="Center"
                                         Fill="#FF0FFF1C"
                                         Width="5"
                                         HorizontalAlignment="Center"
                                         Canvas.Left="1.207" />
                                <Path Data="M0.26932203,-0.0093433256 C2.4434073,1.649482 4.512847,1.628256 6.488322,-0.0093433256 7.3330931,1.1803371 7.4823262,2.5285867 7.4723893,4.259742 L5.5074919,3.0988088 5.1389452,5.177667 1.5760924,5.1955772 1.1551298,3.1698809 -0.83507225,4.4729328 C-0.93333736,2.6794348 -0.65349213,1.2712046 0.26932203,-0.0093433256 z"
                                      Margin="0"
                                      Stretch="Fill"
                                      Stroke="#FF009CFF"
                                      StrokeThickness="0"
                                      Fill="#FF0FFF1C"
                                      Height="4.577"
                                      Width="7.413"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch"
                                      Canvas.Top="2.935"
                                      Canvas.Left="0.001" />
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="StoryboardMove_BeginStoryboard" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="StoryboardMove_BeginStoryboard"
                                                     Storyboard="{StaticResource StoryboardMove}" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true" />
                            <Trigger Property="ToggleButton.IsChecked"
                                     Value="true" />
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleEmpBlue"
               TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource ButtonNormalBackground}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ButtonNormalBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardMove"
                                        RepeatBehavior="Forever"
                                        AutoReverse="True">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                              Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0"
                                                         Value="#FF0800FF" />
                                    <EasingColorKeyFrame KeyTime="0:0:0.7"
                                                         Value="#000800FF" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Width="12"
                              Height="12">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Ellipse x:Name="ellipse"
                                     Margin="0"
                                     Stroke="#FF0800FF"
                                     StrokeThickness="1.5"
                                     Width="12"
                                     Height="12">
                                <Ellipse.Fill>
                                    <RadialGradientBrush Center="0.599,0.28"
                                                         GradientOrigin="0.599,0.28">
                                        <GradientStop Color="#FFC8D2B3" />
                                        <GradientStop Color="#FF0004FF"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Grid.Row="1"
                                              Width="Auto"
                                              Height="Auto" />
                            <Grid Height="10.75"
                                  Margin="-13.25,-10.75,-13.25,0"
                                  VerticalAlignment="Top">
                                <TextBlock Margin="0"
                                           TextWrapping="Wrap"
                                           Text="{TemplateBinding ToolTip}"
                                           VerticalAlignment="Center"
                                           Height="10.75"
                                           FontSize="8"
                                           Foreground="#FF0800FF"
                                           HorizontalAlignment="Center" />
                            </Grid>
                            <Canvas Margin="2.387,2.025,2.199,2.463"
                                    Grid.RowSpan="1">
                                <Ellipse Margin="0"
                                         Stroke="#FF009CFF"
                                         StrokeThickness="0"
                                         Height="3.258"
                                         VerticalAlignment="Center"
                                         Fill="#FF00FFCA"
                                         Width="5"
                                         HorizontalAlignment="Center"
                                         Canvas.Left="1.207" />
                                <Path Data="M0.26932203,-0.0093433256 C2.4434073,1.649482 4.512847,1.628256 6.488322,-0.0093433256 7.3330931,1.1803371 7.4823262,2.5285867 7.4723893,4.259742 L5.5074919,3.0988088 5.1389452,5.177667 1.5760924,5.1955772 1.1551298,3.1698809 -0.83507225,4.4729328 C-0.93333736,2.6794348 -0.65349213,1.2712046 0.26932203,-0.0093433256 z"
                                      Margin="0"
                                      Stretch="Fill"
                                      Stroke="#FF009CFF"
                                      StrokeThickness="0"
                                      Fill="#FF00FFCA"
                                      Height="4.577"
                                      Width="7.413"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch"
                                      Canvas.Top="2.935"
                                      Canvas.Left="0.001" />
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="StoryboardMove_BeginStoryboard"
                                                     Storyboard="{StaticResource StoryboardMove}" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true" />
                            <Trigger Property="ToggleButton.IsChecked"
                                     Value="true" />
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="StoryboardMove_BeginStoryboard" />
                                </Trigger.EnterActions>
                                <Setter Property="Foreground"
                                        Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyleAnimationFinished"
               TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background"
                    Value="{StaticResource CheckBoxFillNormal}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource CheckBoxStroke}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource EmptyCheckBoxFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="grid"
                              RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Ellipse x:Name="ellipse"
                                     Fill="#02F4F4F5"
                                     Margin="0"
                                     Stroke="#FFC0E43E"
                                     StrokeThickness="2" />
                            <Path Data="M3.2656003,15.186998 C4.8198993,17.201998 7.2583673,18.5 10,18.5 14.69442,18.5 18.5,14.69442 18.5,10 18.5,5.3055796 14.69442,1.5 10,1.5 7.1530761,1.5 4.6330499,2.8996149 3.0904689,5.048297" Fill="{x:Null}" Height="16" Margin="7.31,6,5.852,6" Stretch="Fill" Stroke="#FFC0E43E" StrokeThickness="3" Width="15" />
                            <Path Data="M1.5,1.5 L3.3644173,1.5493297 1.7495219,3.1858681 z" Fill="{x:Null}" HorizontalAlignment="Left" Height="4.686" Margin="7.167,0,0,9.481" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#FFC0E43E" StrokeThickness="3" VerticalAlignment="Bottom" Width="4.864" >
                            	<Path.RenderTransform>
                            		<TransformGroup>
                            			<ScaleTransform/>
                            			<SkewTransform/>
                            			<RotateTransform Angle="14.284"/>
                            			<TranslateTransform X="0.040838601772634986" Y="-0.01192382438938111"/>
                            		</TransformGroup>
                            	</Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                    		<Trigger Property="IsMouseOver" Value="True">
                    			<Setter Property="Stroke" TargetName="ellipse" Value="Red"/>
                    		</Trigger>
                    		<Trigger Property="IsPressed"
                    			Value="True">
                    			<Setter Property="RenderTransform"
                    				TargetName="grid">
                    				<Setter.Value>
                    					<TransformGroup>
                    						<ScaleTransform />
                    						<SkewTransform />
                    						<RotateTransform />
                    						<TranslateTransform X="1"
                    							Y="1" />
                    					</TransformGroup>
                    				</Setter.Value>
                    			</Setter>
                    		</Trigger>
                    		<Trigger Property="HasContent"
                    			Value="true">
                    			<Setter Property="FocusVisualStyle"
                    				Value="{StaticResource CheckRadioFocusVisual}" />
                    			<Setter Property="Padding"
                    				Value="4,0,0,0" />
                    		</Trigger>
                    		<Trigger Property="IsEnabled"
                    			Value="false">
                    			<Setter Property="Foreground"
                    				Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    		</Trigger>
                    	</ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyleAnimationLoad"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding"
                    Value="2,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryboardLoad"
                                        AccelerationRatio="0.7"
                                        DecelerationRatio="0.3">
                            	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="contentPresenter">
                            		<EasingDoubleKeyFrame KeyTime="0" Value="-150"/>
                            		<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                            	</DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardUnLoad">
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                                  Storyboard.TargetName="contentPresenter">
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.5"
                                                             Value="-150,0,0,0" />
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true"
                                Height="Auto"
                                HorizontalAlignment="Stretch"
                                Margin="1,0,0,0">
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" >
                            	<ContentPresenter.RenderTransform>
                            		<TransformGroup>
                            			<ScaleTransform/>
                            			<SkewTransform/>
                            			<RotateTransform/>
                            			<TranslateTransform/>
                            		</TransformGroup>
                            	</ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard Storyboard="{StaticResource StoryboardLoad}" />
                            </EventTrigger>
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="true" />
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ListBorder"
                         Color="#828790" />
        <Style x:Key="ListBoxStyleAnimation"
               TargetType="{x:Type ListBox}">
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ListBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="1"
                                SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{DynamicResource SimpleScrollViewer}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleMinus" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid x:Name="grid" Background="#02FFFFFF" RenderTransformOrigin="0.5,0.5">
        					<Grid.RenderTransform>
        						<TransformGroup>
        							<ScaleTransform/>
        							<SkewTransform/>
        							<RotateTransform/>
        							<TranslateTransform/>
        						</TransformGroup>
        					</Grid.RenderTransform>
        					<Image Margin="0" Source="Images/add2.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
        						<Image.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform ScaleY="1" ScaleX="1"/>
        								<SkewTransform AngleY="0" AngleX="0"/>
        								<RotateTransform Angle="20"/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Image.RenderTransform>
        					</Image>
        					<Path x:Name="path" Data="M0.3125,4.625 C2.2742797,6.1784474 4.3016921,7.1096928 6.4389074,7 L7.8760032,5.875 6.3133993,3.625 15.228237,3.5616071 12.415147,11.124165 11.250851,9.3124336 7.6258614,10.937651 C4.9310216,11.384032 0.38279553,9.6691131 0.3125,4.625 z" Height="Auto" Margin="0.312,3.562,0.273,3.376" Stretch="Fill" Stroke="#FF6D8141" StrokeThickness="0.5" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
        						<Path.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform ScaleY="-1" ScaleX="1"/>
        								<SkewTransform AngleY="0" AngleX="0"/>
        								<RotateTransform Angle="20"/>
        								<TranslateTransform X="-0.034" Y="0.001"/>
        							</TransformGroup>
        						</Path.RenderTransform>
        					</Path>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Stroke" TargetName="path" Value="Red"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="RenderTransform" TargetName="grid">
        							<Setter.Value>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform X="1" Y="1"/>
        								</TransformGroup>
        							</Setter.Value>
        						</Setter>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyleAdd" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid x:Name="grid" Background="#02FFFFFF" RenderTransformOrigin="0.5,0.5">
        					<Grid.RenderTransform>
        						<TransformGroup>
        							<ScaleTransform/>
        							<SkewTransform/>
        							<RotateTransform/>
        							<TranslateTransform/>
        						</TransformGroup>
        					</Grid.RenderTransform>
        					<Image Margin="0" Source="Images/add2.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
        						<Image.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform ScaleY="-1" ScaleX="1"/>
        								<SkewTransform AngleY="0" AngleX="0"/>
        								<RotateTransform Angle="-20"/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Image.RenderTransform>
        					</Image>
        					<Path x:Name="path" Data="M0.3125,4.625 C2.2742797,6.1784474 4.3016921,7.1096928 6.4389074,7 L7.8760032,5.875 6.3133993,3.625 15.228237,3.5616071 12.415147,11.124165 11.250851,9.3124336 7.6258614,10.937651 C4.9310216,11.384032 0.38279553,9.6691131 0.3125,4.625 z" Height="Auto" Margin="0.312,3.562,0.273,3.376" Stretch="Fill" Stroke="#FF6D8141" StrokeThickness="0.5" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
        						<Path.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform/>
        								<SkewTransform/>
        								<RotateTransform Angle="-20"/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Path.RenderTransform>
        					</Path>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Stroke" TargetName="path" Value="Red"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="RenderTransform" TargetName="grid">
        							<Setter.Value>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform X="1" Y="1"/>
        								</TransformGroup>
        							</Setter.Value>
        						</Setter>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <RadialGradientBrush x:Key="BrushCheckBoxPlay">
        	<GradientStop Color="Black" Offset="1"/>
        	<GradientStop Color="White" Offset="0.88"/>
        </RadialGradientBrush>
        <Style x:Key="ListBoxStyleFiled" TargetType="{x:Type ListBox}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBox}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
        					<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{DynamicResource SimpleScrollViewer}">
        						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</ScrollViewer>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsGrouping" Value="true">
        						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyleRight" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="5" Background="#02FFFFFF" RenderTransformOrigin="0.5,0.5">
        					<Border.RenderTransform>
        						<TransformGroup>
        							<ScaleTransform/>
        							<SkewTransform/>
        							<RotateTransform/>
        							<TranslateTransform/>
        						</TransformGroup>
        					</Border.RenderTransform>
        					<Image Margin="0" Source="Images/left.png" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="38"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Background" TargetName="border" Value="#FFC0E43E"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="RenderTransform" TargetName="border">
        							<Setter.Value>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform X="1" Y="1"/>
        								</TransformGroup>
        							</Setter.Value>
        						</Setter>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyleLeft" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" Margin="0" Width="Auto" CornerRadius="5" RenderTransformOrigin="0.5,0.5">
        					<Border.RenderTransform>
        						<TransformGroup>
        							<ScaleTransform/>
        							<SkewTransform/>
        							<RotateTransform/>
        							<TranslateTransform/>
        						</TransformGroup>
        					</Border.RenderTransform>
        					<Image Source="Images/right.png" Stretch="Fill" Width="38"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Background" TargetName="border" Value="#FFC0E43E"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="RenderTransform" TargetName="border">
        							<Setter.Value>
        								<TransformGroup>
        									<ScaleTransform/>
        									<SkewTransform/>
        									<RotateTransform/>
        									<TranslateTransform X="1" Y="1"/>
        								</TransformGroup>
        							</Setter.Value>
        						</Setter>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStylePushShow" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Ellipse Margin="0" Stroke="White" Width="40" Height="40" StrokeThickness="1.5">
        						<Ellipse.Fill>
        							<RadialGradientBrush RadiusY="0.949" RadiusX="0.699" GradientOrigin="0.41,0.498" Center="0.323,0.498">
        								<RadialGradientBrush.RelativeTransform>
        									<TransformGroup>
        										<ScaleTransform CenterY="0.498" CenterX="0.375" ScaleY="1" ScaleX="1"/>
        										<SkewTransform AngleY="0" AngleX="0" CenterY="0.498" CenterX="0.375"/>
        										<RotateTransform Angle="-0.082" CenterY="0.498" CenterX="0.375"/>
        										<TranslateTransform/>
        									</TransformGroup>
        								</RadialGradientBrush.RelativeTransform>
        								<GradientStop Color="#FFCDDCCE" Offset="0.104"/>
        								<GradientStop Color="#FF00930E" Offset="0.434"/>
        							</RadialGradientBrush>
        						</Ellipse.Fill>
        					</Ellipse>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ButtonStyleStationNew" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Image Margin="0" Source="Images/stationNew.png" Stretch="Fill"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </Application.Resources>
</Application>
